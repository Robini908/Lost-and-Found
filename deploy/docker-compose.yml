version: '3.8'

services:
  laravel:
    restart: unless-stopped
    container_name: laravelapp
    build:
      context: ../
      dockerfile: ./deploy/Dockerfile
    volumes:
      - ../storage/app:/var/www/html/storage/app
    environment:
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - APP_KEY=${APP_KEY}
      - APP_VERSION=${APP_VERSION}
      - APP_URL=${APP_URL}
      - DB_CONNECTION=mysql
      - DB_HOST=database
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}
    ports:
      - "8080:80"
    networks:
      - laravel-network
    depends_on:
      - database

  database:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: lost_found_hub
      MYSQL_USER: host
      MYSQL_PASSWORD: password
    volumes: 
      - v-database:/var/lib/mysql
    networks:
      - laravel-network

  tensorflow_serving:
    image: tensorflow/serving
    container_name: tensorflow_serving
    command: ["tensorflow_model_server", "--rest_api_port=8501", "--model_name=resnet", "--model_base_path=/models/resnet"]
    volumes:
      - C:/imagemodel:/models
    ports:
      - "8501:8501"
    networks:
      - laravel-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: laravel_user
      PMA_PASSWORD: laravel_password
    ports:
      - "8081:80"
    networks:
      - laravel-network

volumes:
  v-database:

networks:
  laravel-network:
    driver: bridge